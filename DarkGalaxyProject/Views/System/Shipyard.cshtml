@using DarkGalaxyProject.Services.SystemServices.Models
@using DarkGalaxyProject.Data.Enums
@model List<ShipBuilderServiceModel>

@{
    ViewData["Title"] = "Shipyard";
    string shipType = "s";
}

@if (TempData["Message"] != null)
{
    <p> @TempData["Message"] </p>
}

<h1>
    Build Ships
</h1>

<span>Build ship</span>
<form>
    <div class="form-group">
        <select id="shipType" class="form-control" onchange="totalPrice()" asp-items="Html.GetEnumSelectList<ShipType>()"></select>
    </div>
    <div class="form-group">
        <input id="count" oninput="totalPrice()" class="form-control" />
    </div>
    <div class="form-group">
        <input id="systemId" hidden value=@Model.First().systemId class="form-control" />
    </div>
    <div class="form-group">
        <input onclick="startBuilding()" value="Build" class="btn btn-primary" />
    </div>
</form>

<p id="totalPrice"></p>

<p id="timer"></p>

@section Scripts {
    <script>
        @shipType = $("#shipType").val().toString();
        var priceForBattleShip = @Model.First(s => s.ShipType == ShipType.BattleShip.ToString()).PricePerShip;
        var priceForTransportShip = @Model.First(s => s.ShipType == ShipType.TransportShip.ToString()).PricePerShip;
        var priceForEspionage = @Model.First(s => s.ShipType == ShipType.Espionage.ToString()).PricePerShip;
        var priceForColonizer = @Model.First(s => s.ShipType == ShipType.Colonizer.ToString()).PricePerShip;

        @if(Model.Any(p => p.FinishedBuildingTime.HasValue))
        {
            shipType = Model.FirstOrDefault(p => p.FinishedBuildingTime.HasValue).ShipType;
        }

        @{
            var Ship = Model.FirstOrDefault(p => p.ShipType == shipType);
            if(Ship == null)
            {
                Ship = Model.FirstOrDefault();
            }
        }

        window.onload = function () {
            if ('@Ship.FinishedBuildingTime.HasValue' != 'False') {
                 buildShip();
            }
            else {
            }
        }

        function convertSeconds(s) {
            var min = Math.floor(s / 60);
            var sec = Math.floor(s % 60);
            if (min < 10) {
                min = '0' + min;
            }
            if (sec < 10) {
                sec = '0' + sec;
            }
            return min + ':' + sec;
        }

        var dateString = '@(Ship.FinishedBuildingTime.HasValue ? Ship.FinishedBuildingTime.Value : null)';

        function startBuilding() {
                    $(document).ready(function () {
                        var shipType = $("#shipType").val().toString();
                        var systemId = $("#systemId").val();
                        var count = $("#count").val();
                        var datastring = "shipType=" + shipType + "&systemId=" + systemId + "&count=" + count;
                        $.ajax({
                            type: "post",
                            url: "StartBuilding",
                            data: datastring,
                            success: function (response) {
                                setTimeout(function () { window.location.href = response.redirectToUrl; }, 200);
                            }
                        });
                    });
        }

        function buildShip() {
            var counter = 0;
            var timeleft = 0;

                var oneSplit = dateString.split(' ');
                var year = oneSplit[0].split('/')[2];
                var month = oneSplit[0].split('/')[1];
                var day = oneSplit[0].split('/')[0];
                var hour = oneSplit[1].split(':')[0];
                var minutes = oneSplit[1].split(':')[1];
                var seconds = oneSplit[1].split(':')[2];

                var buildingFinishTime = new Date(year, month - 1, day, hour, minutes, seconds);

            timeleft = (buildingFinishTime.getTime() - new Date().getTime()) / 1000;

            if (timeleft - counter > 0) {

                document.getElementById('timer').innerText = convertSeconds(timeleft);

                var _tick = setInterval(function () {
                    counter++;
                    document.getElementById('timer').innerText = convertSeconds(timeleft - counter);
                    if (timeleft - counter <= 0) {
                        clearInterval(_tick);
                        setTimeout(function () { location.reload(); }, 1200);
                    }
                }, 1000);
            }
        }

        function totalPrice() {
            var count = document.getElementById('count').value;
            var shipType = document.getElementById('shipType').value.toString();
            var price = 0;

            if (shipType == @((int)ShipType.BattleShip)) {
                price = priceForBattleShip;
            }
            if (shipType == @((int)ShipType.TransportShip)) {
                price = priceForTransportShip;
            }
            if (shipType == @((int)ShipType.Espionage)) {
                price = priceForEspionage;
            }
            if (shipType == @((int)ShipType.Colonizer)) {
                price = priceForColonizer;
            }

            var finalPrice = count * price;
            document.getElementById('totalPrice').innerText = 'Final price: ' + finalPrice;
        }

    </script>
}